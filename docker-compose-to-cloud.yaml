version: '3.9'

services:
  db:
    container_name: server-side-postgres-database
    image: cr.yandex/crpld28mq3vgl8ej0eap/server-side-postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      POSTGRES_INITDB_ARGS: --auth-host=scram-sha-256
    volumes:
      - /postgresql_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      intranet:
    command: postgres -c config_file=/var/lib/postgresql/data/pgdata/postgresql.conf
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres -p 5432 -h localhost -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    container_name: server-side-adminer
    image: cr.yandex/crpld28mq3vgl8ej0eap/server-side-adminer:latest
    restart: always
    ports:
      - 8082:8080
    environment:
      ADMINER_DESIGN: dracula
    networks:
      - intranet

  app_server:
    container_name: server-side-app-server
    image: cr.yandex/crpld28mq3vgl8ej0eap/server-side-app-server-image:latest
    restart: always
    environment:
      POSTGRESQL_HOST: db
      POSTGRESQL_PASSWORD: password
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8080:8080
    networks:
      - intranet

  web_client:
    container_name: server-side-web-client
    image: cr.yandex/crpld28mq3vgl8ej0eap/server-side-web-client-image:latest
    volumes:
      - app-volume:/public/web_client
    stdin_open: true

  nginx:
    container_name: server-side-nginx
    image: cr.yandex/crpld28mq3vgl8ej0eap/server-side-nginx:latest
    restart: always
    ports:
      - 80:80
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d/
      - ./nginx/public:/public/
      - ./nginx/usr/share/nginx:/usr/share/nginx/

      - app-volume:/public/web_client
    networks:
      - intranet

networks:
  intranet:

volumes:
  app-volume: